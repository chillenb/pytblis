name: wheels

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
  release:
    types:
      - published
  pull_request:
    paths:
      - .github/workflows/cd.yml

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Many color libraries just need this to be set to any value, but at least
  # one distinguishes color depth, where "3" -> "256-bit color".
  FORCE_COLOR: 3

jobs:
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Wheel on ${{ matrix.os }} for Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux 64 bit manylinux2014
          - os: ubuntu-latest
            python: 310
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
            pytblis_arch: x86_64
          - os: ubuntu-latest
            python: 311
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
            pytblis_arch: x86_64
          - os: ubuntu-latest
            python: 312
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
            pytblis_arch: x86_64
          - os: ubuntu-latest
            python: 313
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
            pytblis_arch: x86_64

          # # Linux 64 bit manylinux2014
          - os: ubuntu-24.04-arm
            python: 310
            platform_id: manylinux_aarch64
            manylinux_image: manylinux2014
            pytblis_arch: arm64
          - os: ubuntu-24.04-arm
            python: 311
            platform_id: manylinux_aarch64
            manylinux_image: manylinux2014
            pytblis_arch: arm64
          - os: ubuntu-24.04-arm
            python: 312
            platform_id: manylinux_aarch64
            manylinux_image: manylinux2014
            pytblis_arch: arm64
          - os: ubuntu-24.04-arm
            python: 313
            platform_id: manylinux_aarch64
            manylinux_image: manylinux2014
            pytblis_arch: arm64

          # MacOS x86_64
          - os: macos-13
            python: 310
            platform_id: macosx_x86_64
            pytblis_arch: x86_64
          - os: macos-13
            python: 311
            platform_id: macosx_x86_64
            pytblis_arch: x86_64
          - os: macos-13
            python: 312
            platform_id: macosx_x86_64
            pytblis_arch: x86_64
          - os: macos-13
            python: 313
            platform_id: macosx_x86_64
            pytblis_arch: x86_64

          # MacOS arm64
          - os: macos-14
            python: 310
            platform_id: macosx_arm64
            pytblis_arch: arm64
          - os: macos-14
            python: 311
            platform_id: macosx_arm64
            pytblis_arch: arm64
          - os: macos-14
            python: 312
            platform_id: macosx_arm64
            pytblis_arch: arm64
          - os: macos-14
            python: 313
            platform_id: macosx_arm64
            pytblis_arch: arm64

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v6

      - uses: pypa/cibuildwheel@v3.0
        env:
          CMAKE_GENERATOR: "Unix Makefiles"
          CMAKE_BUILD_PARALLEL_LEVEL: 4
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_ARCHS: all
          CIBW_ENVIRONMENT_PASS_LINUX: "CMAKE_GENERATOR CMAKE_BUILD_PARALLEL_LEVEL CMAKE_ARGS CIBW_BEFORE_BUILD"
          CIBW_BEFORE_BUILD: "rm -rf build"
          CMAKE_ARGS: "-DBLIS_CONFIG_FAMILY=${{ matrix.pytblis_arch }}"

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ inputs.debug_enabled && failure() }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: wheelhouse/*.whl

  upload_all:
    needs: [build_wheels, make_sdist]
    environment: pypi
    permissions:
      id-token: write
      attestations: write
      contents: read
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Generate artifact attestations
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: "dist/*"

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # Remember to tell (test-)pypi about this repo before publishing
          # Remove this line to publish to PyPI
          repository-url: https://test.pypi.org/legacy/
